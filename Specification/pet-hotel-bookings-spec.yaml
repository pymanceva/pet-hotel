openapi: 3.0.1
info:
  title: 'PetHotel: Bookings Specification'
  description: Документация раздела по работе с бронированиями
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url
  - url: http://212.109.192.9:8080
    description: Удалённый backend сервер для тестирования и работы frontend. По вопросам работы сервера обращаться к Руслану
tags:
  - description: API для работы с бронированиями.
    name: booking-controller
paths:
  /bookings:
    post:
      tags:
        - booking-controller
      operationId: addBooking
      description: Добавление нового бронирования. Доступно только пользователям с ролью ROLE_BOSS и ROLE_ADMIN.
      summary: Добавить новое бронирование
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBookingDto'
        description: Данные о добавляемом бронировании
        required: true
      responses:
        '201':
          description: Бронирование добавлено
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingDto'
        '400':
          content:
            application/json:
              example:
                error: '[]'
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: 'Required request header X-PetHotel-User-Id for method parameter type Long is not present'
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
          description: Запрос составлен некорректно.Например, переданы невалидные данные.
        '403':
          description: У пользователя с данной ролью нет прав на совершение данного действия.
          content:
            application/json:
              example:
                error: '[]'
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Объект не найден - в БД отсутствует пользователь с id, переданном в header.
          content:
            application/json:
              example:
                error: '[]'
                status: NOT_FOUND
                reason: The required object was not found.
                message: "user with id=1 is not found"
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Конфликт данных - у данного номера уже имеется бронирование, накладывающееся на выбранные даты.
          content:
            application/json:
              example:
                error: '[]'
                status: CONFLICT
                reason: For the requested operation the conditions are not met.
                message: 'Room with id=1 already has booking for these dates'
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error. Все прочие неотлавливаемые исключения.
          content:
            application/json:
              example:
                error: '[]'
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error
                message: []
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
  /bookings/{id}:
    get:
      tags:
        - booking-controller
      operationId: getBookingById
      description: Получение бронирования по ID. Доступно только для пользователей с ролью ROLE_BOSS или ROLE_ADMIN.
      summary: Получить информацию о бронировании
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
        - $ref: '#/components/parameters/bookingId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingDto'
        '400':
          content:
            application/json:
              example:
                error: '[]'
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: 'Required request header X-PetHotel-User-Id for method parameter type Long is not present'
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
          description: Запрос составлен некорректно.Например, переданы невалидные данные.
        '403':
          description: У пользователя с данной ролью нет прав на совершение данного действия.
          content:
            application/json:
              example:
                error: '[]'
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Объект не найден - в БД отсутствует пользователь с id, переданном в header либо бронирование с указанным ID.
          content:
            application/json:
              example:
                error: '[]'
                status: NOT_FOUND
                reason: The required object was not found.
                message: "user with id=1 is not found"
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error. Все прочие неотлавливаемые исключения.
          content:
            application/json:
              example:
                error: '[]'
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error
                message: [ ]
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - booking-controller
      operationId: deleteBookingById
      description: Удаление существующего бронирования. Доступно только пользователям ROLE_BOSS и ROLE_ADMIN.
      summary: Удалить информацию о бронировании (безвозвратно)
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
        - $ref: '#/components/parameters/bookingId'
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              example:
                error: '[]'
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: 'Required request header X-PetHotel-User-Id for method parameter type Long is not present'
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
          description: Запрос составлен некорректно.Например, переданы невалидные данные.
        '403':
          description: У пользователя с данной ролью нет прав на совершение данного действия.
          content:
            application/json:
              example:
                error: '[]'
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Объект не найден - в БД отсутствует пользователь с id, переданном в header либо бронирование с указанным ID.
          content:
            application/json:
              example:
                error: '[]'
                status: NOT_FOUND
                reason: The required object was not found.
                message: "user with id=1 is not found"
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error. Все прочие неотлавливаемые исключения.
          content:
            application/json:
              example:
                error: '[]'
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error
                message: [ ]
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - booking-controller
      operationId: updateBooking
      description: Редактирование существующего бронирования. Доступно пользователям ROLE_BOSS и ROLE_ADMIN.
      summary: Изменить информацию об имеющемся бронировании
      parameters:
        - $ref: '#/components/parameters/requesterHeader'
        - $ref: '#/components/parameters/bookingId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookingDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingDto'
        '400':
          content:
            application/json:
              example:
                error: '[]'
                status: BAD_REQUEST
                reason: Incorrectly made request.
                message: 'Required request header X-PetHotel-User-Id for method parameter type Long is not present'
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
          description: Запрос составлен некорректно.Например, переданы невалидные данные.
        '403':
          description: У пользователя с данной ролью нет прав на совершение данного действия.
          content:
            application/json:
              example:
                error: '[]'
                status: FORBIDDEN
                reason: Operation is denied for this user.
                message: "User with role=ROLE_FINANCIAL, can't access for this action"
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Объект не найден - в БД отсутствует пользователь с id, переданном в header либо бронирование с указанным ID.
          content:
            application/json:
              example:
                error: '[]'
                status: NOT_FOUND
                reason: The required object was not found.
                message: "user with id=1 is not found"
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Конфликт данных - у данного номера уже имеется бронирование, накладывающееся на выбранные даты.
          content:
            application/json:
              example:
                error: '[]'
                status: CONFLICT
                reason: For the requested operation the conditions are not met.
                message: 'Room with id=1 already has booking for these dates'
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error. Все прочие неотлавливаемые исключения.
          content:
            application/json:
              example:
                error: '[]'
                status: INTERNAL_SERVER_ERROR
                reason: Internal Server Error
                message: [ ]
                timestamp: '2023-01-01 00:00:00'
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    requesterHeader:
      name: X-PetHotel-User-Id
      description: Id пользователя, осуществляющего запрос
      in: header
      required: true
      schema:
        type: integer
        format: int64
    bookingId:
      name: booking-Id
      description: ID бронирования
      in: path
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    Error:
      type: object
      properties:
        errors:
          type: array
          description: Список стектрейсов или описания ошибок
          example: []
          items:
            type: string
            description: Cтектрейс или описание ошибки
            example: '[]'
        message:
          type: string
          description: Сообщение об ошибке
          example: "validation email size error"
        reason:
          type: string
          description: Общее описание причины ошибки
          example: Request parameters validation error
        httpStatus:
          type: string
          description: Код статуса HTTP-ответа
          example: FORBIDDEN
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        timestamp:
          type: string
          description: >-
            Дата и время когда произошла ошибка (в формате "yyyy-MM-dd
            HH:mm:ss")
          example: '2023-01-01 00:00:00'
    BookingDto:
      required:
        - id
        - type
        - checkInDate
        - checkOutDate
        - status
        - price
        - amount
        - prepaymentAmount
        - isPrepaid
        - room
        - pets
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        type:
          description: Тип бронирования (обычное или временное закрытие номера, например, для ремонта)
          type: string
          example: TYPE_BOOKING
          enum:
            - TYPE_BOOKING
            - TYPE_CLOSING
        checkInDate:
          description: Дата заезда в формате "dd.MM.yyyy"
          example: 01.01.2024
          type: string
        checkOutDate:
          description: Дата выезда в формате "dd.MM.yyyy"
          example: 31.01.2024
          type: string
        checkInTime:
          description: Время заезда в формате "HH:mm"
          example: 10:00
          type: string
        checkOutTime:
          description: Время выезда в формате "HH:mm"
          example: 15:00
          type: string
        daysOfBooking:
          description: Количество дней пребывания = Дата окончания бронирования-Дата начала бронирования +1.
          example: 31
          type: integer
          format: int64
          minimum: 1
        status:
          description: Статус бронирования (Первичное, Подтвержденное, Заселен, Выселен, Отменено). По умолчанию для бронирования типа TYPE_BOOKING устанавливается статус STATUS_INITIAL. Если поле isPrepaid=true - статус STATUS_CONFIRMED. Для бронирования типа TYPE_CLOSING устанавливается статус STATUS_CONFIRMED. Остальные статусы присваиваются пользователем вручную.
          example: STATUS_CONFIRMED
          type: string
          enum:
            - STATUS_INITIAL
            - STATUS_CONFIRMED
            - STATUS_CHECKED_IN
            - STATUS_CHECKED_OUT
            - STATUS_CANCELLED
        reasonOfStop:
          description: Причина закрытия номера. Обязательно для бронирования типа TYPE_CLOSING
          example: REASON_CLEANING
          type: string
          enum:
            - REASON_UNAVAILABLE
            - REASON_RENOVATION
            - REASON_CLEANING
        reasonOfCancel:
          description: Отмены бронирования.
          example: По желанию клиента.
          maxLength: 150
          type: string
        price:
          description: Цена за сутки.
          example: 999.99
          type: number
          format: double
          minimum: 0.00
          maximum: 999999.99
          default: 0.00
        amount:
          description: Стоимость за весь период бронирования.
          example: 999.99
          type: number
          format: double
          minimum: 0.00
          maximum: 9999999.99
          default: 0.00
        prepaymentAmount:
          description: Сумма предоплаты.
          example: 999.99
          type: number
          format: double
          minimum: 0.00
          maximum: 999999.99
          default: 0.00
        isPrepaid:
          type: boolean
          description: Внесена ли предоплата
          example: true
          default: false
        comment:
          type: string
          description: Комментарий к бронированию
          example: Текст комментария
          maxLength: 150
        fileUrl:
          type: string
          example: https://picture.com
          description: Ссылка на файл-вложение
        room:
          $ref: '#/components/schemas/RoomDto'
        pets:
          type: array
          items:
            $ref: '#/components/schemas/PetDto'
    NewBookingDto:
      required:
        - type
        - checkInDate
        - checkOutDate
        - roomId
      type: object
      properties:
        type:
          description: Тип бронирования (обычное или временное закрытие номера, например, для ремонта)
          type: string
          example: TYPE_BOOKING
          enum:
            - TYPE_BOOKING
            - TYPE_CLOSING
        checkInDate:
          description: Дата заезда в формате "dd.MM.yyyy"
          example: 01.01.2024
          type: string
          format: date
        checkOutDate:
          description: Дата выезда в формате "dd.MM.yyyy"
          example: 31.01.2024
          type: string
          format: date
        checkInTime:
          description: Время заезда в формате "HH:mm"
          example: 10:00
          type: string
          format: time
        checkOutTime:
          description: Время выезда в формате "HH:mm"
          example: 15:00
          type: string
          format: time
        reasonOfStop:
          description: Причина закрытия номера. Обязательно для бронирования типа TYPE_CLOSING
          example: REASON_CLEANING
          type: string
          enum:
            - REASON_UNAVAILABLE
            - REASON_RENOVATION
            - REASON_CLEANING
        reasonOfCancel:
          description: Отмены бронирования.
          example: По желанию клиента.
          maxLength: 150
          type: string
        price:
          description: Цена за сутки.
          example: 999.99
          type: number
          format: double
          minimum: 0.00
          maximum: 999999.99
          default: 0.00
        amount:
          description: Стоимость за весь период бронирования.
          example: 999.99
          type: number
          format: double
          minimum: 0.00
          maximum: 9999999.99
          default: 0.00
        prepaymentAmount:
          description: Сумма предоплаты.
          example: 999.99
          type: number
          format: double
          minimum: 0.00
          maximum: 999999.99
          default: 0.00
        isPrepaid:
          type: boolean
          description: Внесена ли предоплата
          example: true
          default: false
        comment:
          type: string
          description: Комментарий к бронированию
          example: Текст комментария
          maxLength: 150
        fileUrl:
          type: string
          example: https://picture.com
          description: Ссылка на файл-вложение
        roomId:
          type: integer
          format: int64
          description: Id бронируемого номера
          example: 1
        petIds:
          description: Список id питомцев в бронировании
          type: array
          items:
            type: integer
            format: int64
    UpdateBookingDto:
      type: object
      properties:
        checkInDate:
          description: Дата заезда в формате "dd.MM.yyyy"
          example: 01.01.2024
          type: string
          format: date
        checkOutDate:
          description: Дата выезда в формате "dd.MM.yyyy"
          example: 31.01.2024
          type: string
          format: date
        checkInTime:
          description: Время заезда в формате "HH:mm"
          example: 10:00
          type: string
          format: time
        checkOutTime:
          description: Время выезда в формате "HH:mm"
          example: 15:00
          type: string
          format: time
        status:
          description: Статус бронирования (Первичное, Подтвержденное, Заселен, Выселен, Отменено). По умолчанию для бронирования типа TYPE_BOOKING устанавливается статус STATUS_INITIAL. Если поле isPrepaid=true - статус STATUS_CONFIRMED. Для бронирования типа TYPE_CLOSING устанавливается статус STATUS_CONFIRMED. Остальные статусы присваиваются пользователем вручную.
          example: STATUS_CONFIRMED
          type: string
          enum:
            - STATUS_INITIAL
            - STATUS_CONFIRMED
            - STATUS_CHECKED_IN
            - STATUS_CHECKED_OUT
            - STATUS_CANCELLED
        reasonOfStop:
          description: Причина закрытия номера. Обязательно для бронирования типа TYPE_CLOSING
          example: REASON_CLEANING
          type: string
          enum:
            - REASON_UNAVAILABLE
            - REASON_RENOVATION
            - REASON_CLEANING
        reasonOfCancel:
          description: Отмены бронирования.
          example: По желанию клиента.
          maxLength: 150
          type: string
        price:
          description: Цена за сутки.
          example: 999.99
          type: number
          format: double
          minimum: 0.00
          maximum: 999999.99
          default: 0.00
        amount:
          description: Стоимость за весь период бронирования.
          example: 999.99
          type: number
          format: double
          minimum: 0.00
          maximum: 9999999.99
          default: 0.00
        prepaymentAmount:
          description: Сумма предоплаты.
          example: 999.99
          type: number
          format: double
          minimum: 0.00
          maximum: 999999.99
          default: 0.00
        isPrepaid:
          type: boolean
          description: Внесена ли предоплата
          example: true
          default: false
        comment:
          type: string
          description: Комментарий к бронированию
          example: Текст комментария
          maxLength: 150
        fileUrl:
          type: string
          example: https://picture.com
          description: Ссылка на файл-вложение
        roomId:
          type: integer
          format: int64
          description: Id бронируемого номера
          example: 1
        petIds:
          description: Список id питомцев в бронировании
          type: array
          items:
            type: integer
            format: int64
    RoomDto:
      required:
        - number
        - type
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID номера
          example: 1
        number:
          description: Буквенно-цифровое обозначение номера
          maxLength: 100
          minLength: 1
          type: string
          uniqueItems: true
          example: 1F
        area:
          description: Площадь номера
          minimum: 0.00
          type: number
          format: double
          example: 6.50
        Category:
          $ref: '#/components/schemas/CategoryDto'
        description:
          description: Описание номера
          example: Номер с отдельным входом
          type: string
          maxLength: 250
        isVisible:
          description: Отображение номера в сетке бронирований
          type: boolean
          default: true
          example: true
    CategoryDto:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID категории
          example: 1
        name:
          maxLength: 20
          minLength: 1
          type: string
          description: Название категории
          example: Номер для собак
          uniqueItems: true
        text:
          type: string
          description: Описание категории
          maxLength: 250
          example: Номер для собак, антивандальная отделка, оснащен лежаками, мисками.
    PetDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: id питомца
          example: 1
        owner:
          $ref: '#/components/schemas/OwnerShortDto'
        type:
          type: string
          enum:
            - DOG
            - CAT
            - EXOTIC
          description: Тип животного
          example: DOG
        name:
          maxLength: 30
          minLength: 1
          type: string
          description: Кличка питомца
          example: Барбос
        breed:
          maxLength: 30
          minLength: 1
          type: string
          description: Порода питомца
          example: Спаниель
        birthDate:
          type: string
          description: Дата рождения (в формате "dd.MM.yyyy"), должно быть в прошлом
          example: 09.06.2023
        age:
          type: string
          description: Возраст питомца, высчитывается автоматически на основании даты рождения
          example: 3 года
        sex:
          type: string
          enum:
            - FEMALE
            - MALE
            - HERMAPHRODITE
          description: Пол питомца
          example: FEMALE
        color:
          maxLength: 30
          type: string
          description: Окрас питомца
          example: Черный
        sign:
          maxLength: 150
          type: string
          description: Чип, Клеймо, Особые приметы
          example: Клеймо
        isExhibition:
          type: boolean
          description: Выставочная ли собака?
          example: true
        vetVisitDate:
          type: string
          description: Дата последнего посещения ветврача (в формате "dd.MM.yyyy"), должно быть в прошлом
          example: 09.06.2023
        vetVisitReason:
          maxLength: 250
          type: string
          description: Причина последнего посещения врача
          example: Ушиб лапы
        vaccine:
          maxLength: 250
          type: string
          description: Даты последних прививок, названия вакцин
          example: 1.11.2023 антиклещ
        parasites:
          maxLength: 250
          type: string
          description: Дата обработки от глистов/паразитов
          example: 22.11.2023
        fleaMite:
          maxLength: 250
          type: string
          description: Даты обработки от блох/клещей с указанием препарата
          example: 22.11.2023 антиклещ
        surgery:
          maxLength: 250
          type: string
          description: Перенесенные операции (кастрация)
          example: Кастрация
        pastDisease:
          maxLength: 500
          type: string
          description: Перенесенные заболевания
          example: пиелонефрит
        healthCharacteristic:
          maxLength: 500
          type: string
          description: Особенности состояния здоровья питомца (ФИП)
          example: без особенностей
        urineAnalysis:
          maxLength: 250
          type: string
          description: Дата последней сдачи мочи
          example: 1.11.2023
        allergy:
          type: boolean
          description: Есть ли аллергия?
          example: true
        allergyType:
          maxLength: 250
          type: string
          description: Если предыдущее поле true, тогда в этом поле описание на что аллергия
          example: На молоко
        chronicDisease:
          type: boolean
          description: Есть ли у питомца хронические заболевания?
          example: true
        chronicDiseaseType:
          maxLength: 500
          type: string
          description: Если предыдущее поле true, тогда в этом поле описание какие хронические заболевания есть
          example: пиелонефрит
        heatDate:
          type: string
          description: Предполагаемая дата очередной течки (для сук)(в формате "dd.MM.yyyy"), должно быть в будущем
          example: 09.06.2023
        vetData:
          maxLength: 500
          type: string
          description: Контакты ветврача, к которому следует обращаться в случае необходимости
          example: 89000000000 Иван Иваныч Иванов
        stayWithoutMaster:
          maxLength: 500
          type: string
          description: Есть ли опыт разлуки с хозяином?
          example: Да, разлучается спокойно
        stayAlone:
          maxLength: 250
          type: string
          description: Умеет ли питомец спокойно оставаться один?
          example: нет, воет, когда остаётся один
        specialCare:
          maxLength: 500
          type: string
          description: Требуется ли спец уход, какой?
          example: да, нужно расчёсывать шерсть два раза в день
        barkHowl:
          maxLength: 250
          type: string
          description: Лает / воет в одиночестве?
          example: да
        furnitureDamage:
          maxLength: 250
          type: string
          description: Портит ли вещи, мебель?
          example: нет
        foodFromTable:
          maxLength: 250
          type: string
          description: Ворует ли еду со стола?
          example: нет
        defecateAtHome:
          maxLength: 250
          type: string
          description: Справляет ли  нужду дома?
          example: нет
        markAtHome:
          maxLength: 250
          type: string
          description: Метит дома?
          example: нет
        newPeople:
          maxLength: 500
          type: string
          description: Как относится к незнакомым людям?
          example: дружелюбно
        isBitePeople:
          type: boolean
          description: Ваша собака когда-нибудь кого-нибудь кусала?
          example: true
        reasonOfBite:
          maxLength: 250
          type: string
          description: Если предыдущее поле true, тогда в этом поле причина укуса
          example: Дразнил
        playWithDogs:
          maxLength: 500
          type: string
          description: Играет / гуляет с другими собаками?
          example: да
        isDogTraining:
          type: boolean
          description: Прошел ли питомец курс послушания?
          example: true
        trainingName:
          maxLength: 500
          type: string
          description: Если предыдущее поле true, тогда в этом поле название курс послушания
          example: Послушная собака
        like:
          maxLength: 500
          type: string
          description: Что любит
          example: Когда гладят по голове
        notLike:
          maxLength: 500
          type: string
          description: Что не любит
          example: Когда трогают хвост
        toys:
          maxLength: 500
          type: string
          description: Любимые игрушки, игры питомца
          example: Мячик
        badHabit:
          maxLength: 250
          type: string
          description: Вредные привычки
          example: Разбрасывает еду из миски
        walking:
          maxLength: 250
          type: string
          description: Сколько раз в день питомец привык гулять?/гуляет ли на улице
          example: три раза
        morningWalking:
          maxLength: 150
          type: string
          description: Привычное время прогулок Утро
          example: 6 утра
        dayWalking:
          maxLength: 150
          type: string
          description: Привычное время прогулок День
          example: В 2 часа дня
        eveningWalking:
          maxLength: 150
          type: string
          description: Привычное время прогулок Вечер
          example: В 8 часов вечера
        feedingQuantity:
          type: integer
          description: Количество кормлений в день (От 1 до 9)
          format: int32
          example: 7
        feedType:
          maxLength: 250
          type: string
          description: Вид корма (сухой / натуралка/консервы)
          example: сухой корм
        feedName:
          maxLength: 250
          type: string
          description: Название корма/консерв
          example: Довольный пёс
        feedComposition:
          maxLength: 250
          type: string
          description: Состав корма/консерв
          example: говядина и овощи
        feedingRate:
          maxLength: 250
          type: string
          description: Норма на 1 кормление
          example: 100 г
        feedingPractice:
          maxLength: 500
          type: string
          description: Особенности кормления
          example: без особенностей
        treat:
          maxLength: 250
          type: string
          description: Разрешенные лакомства и их количество
          example: сахар
        isMedicine:
          type: boolean
          description: Необходимы ли лекарства, витамины?
          example: true
        medicineRegimen:
          maxLength: 500
          type: string
          description: Если предыдущее поле true, тогда в этом поле название, режим приема лекарств/витаминов и доза
          example: Здоровая собака
        additionalData:
          maxLength: 1000
          type: string
          description: Дополнительные комментарии, особенности поведения
          example: Любит, чтоб чесали животик
    OwnerShortDto:
      description: Краткое Дто клиента
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 1
          type: string
          description: ФИО хозяина питомца
          example: Иванов И.И.
        rating:
          type: integer
          description: Рейтинг клиента (От 1 до 10)
          format: int32
          example: 7

